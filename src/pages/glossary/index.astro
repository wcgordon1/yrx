---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import Text from "@/components/fundations/elements/Text.astro";
import Link from "@/components/fundations/components/Link.astro";
import GlossarySearch from "@/components/glossary/GlossarySearch.astro";

// Import glossary data safely
let glossaryData = [];
try {
  const glossaryModule = await import("@/data/glossary.js");
  glossaryData = glossaryModule.glossaryData || [];
} catch (error) {
  console.error("Failed to load glossary data:", error);
  // Fallback data for testing
  glossaryData = [
    {
      term: "SEO",
      slug: "seo",
      answer: "Search Engine Optimization - the practice of increasing the quantity and quality of traffic to your website through organic search engine results."
    },
    {
      term: "Keyword",
      slug: "keyword", 
      answer: "A word or phrase that describes the content on your page or post best. It's the search term that you want to rank for with a certain page."
    }
  ];
}

// Ensure glossaryData is an array
if (!Array.isArray(glossaryData)) {
  console.error("glossaryData is not an array:", glossaryData);
  glossaryData = [];
}

// Get all unique first letters from terms
const availableLetters = glossaryData.length > 0 
  ? [...new Set(glossaryData.map(term => term.term?.charAt(0)?.toUpperCase()).filter(Boolean))].sort()
  : [];

// Create full alphabet for display
const fullAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');

// Structured Data for Collection Page
const structuredData = {
  "@context": "https://schema.org",
  "@graph": [
    {
      "@type": "CollectionPage",
      "@id": `${Astro.site || 'https://example.com/'}glossary`,
      "url": `${Astro.site || 'https://example.com/'}glossary`,
      "name": "SEO Glossary",
      "headline": "Complete SEO Glossary - Marketing & Search Engine Terms",
      "description": `Comprehensive SEO glossary with ${glossaryData.length} essential marketing and search engine optimization terms, definitions, and examples.`,
      "author": {
        "@type": "Organization",
        "name": "TrendSpotter"
      },
      "mainEntity": {
        "@type": "ItemList",
        "numberOfItems": glossaryData.length,
        "itemListElement": glossaryData.map((term, index) => ({
          "@type": "ListItem",
          "position": index + 1,
          "url": `${Astro.site || 'https://example.com/'}glossary/${term.slug}`,
          "name": term.term
        }))
      }
    }
  ]
};

const pageTitle = "SEO Glossary - Complete Marketing & Search Terms Dictionary";
const pageDescription = `Explore our comprehensive SEO glossary with ${glossaryData.length} essential marketing and search engine optimization terms. Get clear definitions, examples, and insights for every SEO concept.`;
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <Fragment slot="head">
    <link rel="canonical" href={`${Astro.site || ''}glossary`} />
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
  </Fragment>

  <!-- Hero Section -->
  <section>
    <Wrapper variant="hero">
      <Text
        tag="h1"
        variant="displaySM"
        class="text-base-900 font-medium 2xl:text-5xl tracking-tight"
      >
        SEO Glossary of Trending Terms
      </Text>
      <Text
        tag="p"
        variant="textBase"
        class="mt-4 text-base-500 text-balance 2xl:text-xl"
      >
        Master SEO with our comprehensive glossary of {glossaryData.length} essential marketing and search engine optimization terms.
      </Text>
      <div class="max-w-sm mt-4"><GlossarySearch /></div>
    </Wrapper>
  </section>

  <!-- Alphabet Navigation -->
  <section>
    <Wrapper variant="standard" class="py-6">
      <div class="flex items-center gap-2">
        <div class="text-sm font-medium text-base-900 whitespace-nowrap">Browse by Letter:</div>
        <div
          class="scrollable-content relative flex snap-x snap-proximity gap-2 py-2 px-2 overflow-x-scroll scrollbar-hide"
        >
          {fullAlphabet.map((letter) => {
            const hasTerms = availableLetters.includes(letter);
            return hasTerms ? (
              <a
                href={`/glossary/letters/${letter.toLowerCase()}`}
                class="flex items-center justify-center w-8 h-8 text-sm font-medium text-base-700 bg-white hover:bg-accent-500 hover:text-white border border-base-200 hover:border-accent-500 rounded transition-all duration-200 snap-start flex-shrink-0"
              >
                {letter}
              </a>
            ) : (
              <div 
                class="flex items-center justify-center w-8 h-8 text-sm font-medium text-base-300 bg-base-50 border border-base-200 rounded cursor-not-allowed snap-start flex-shrink-0"
              >
                {letter}
              </div>
            );
          })}
        </div>
      </div>
    </Wrapper>
  </section>

  <!-- Quick Stats & Featured Terms -->
  <section class="py-8 lg:py-16">
    <Wrapper variant="standard">
      <div class="max-w-4xl mx-auto text-center">
        
        <!-- Stats -->
        <div class="mb-12">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div class="bg-white border border-base-200 rounded-lg p-6">
              <div class="text-2xl font-bold text-accent-500">{glossaryData.length}</div>
              <div class="text-sm text-base-500">Total Terms</div>
            </div>
            <div class="bg-white border border-base-200 rounded-lg p-6">
              <div class="text-2xl font-bold text-accent-500">{availableLetters.length}</div>
              <div class="text-sm text-base-500">Letters Covered</div>
            </div>
            <div class="bg-white border border-base-200 rounded-lg p-6">
              <div class="text-2xl font-bold text-accent-500">100%</div>
              <div class="text-sm text-base-500">SEO Focused</div>
            </div>
          </div>
        </div>

        <div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4 mt-2">
          {glossaryData.length > 0 ? (
            glossaryData.slice(0, 8).map((term, i) => (
              <a 
                href={`/glossary/${term.slug}`}
                class="block p-4 bg-white border border-base-200 rounded-lg hover:shadow-md hover:border-accent-300 transition-all duration-200 text-left"
              >
                <Text tag="h3" variant="textLG" class="font-semibold text-base-900 mb-2">
                  {term.term}
                </Text>
                <Text tag="p" variant="textSM" class="text-base-600 line-clamp-3">
                  {term.answer}
                </Text>
              </a>
            ))
          ) : (
            <div class="col-span-full text-center py-8">
              <Text tag="h2" variant="displaySM" class="text-base-900 mb-4">
                No Terms Available
              </Text>
              <Text tag="p" variant="textLG" class="text-base-600">
                Glossary data could not be loaded. Please check your glossary data file.
              </Text>
            </div>
          )}
        </div>


      </div>
    </Wrapper>
  </section>
</BaseLayout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Smooth scrolling for alphabet navigation */
  html {
    scroll-behavior: smooth;
  }
  
  /* Focus styles for accessibility */
  .term-card:focus {
    outline: 2px solid #6366f1;
    outline-offset: 2px;
  }
</style>