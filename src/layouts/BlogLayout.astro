---
const { frontmatter } = Astro.props;
import BaseLayout from "./BaseLayout.astro";
import SubscribeCta from "@/components/blog/SubscribeCta.astro";
import Text from "@/components/fundations/elements/Text.astro";
import Link from "@/components/fundations/components/Link.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import Insights from "@/components/blog/Insights.astro";
// Retrieve all posts from the "posts" collection, which returns an unsorted array of post objects
import { getCollection } from "astro:content";
const allPostsUnsorted = await getCollection("posts");
// Sort the posts in descending order by publication date (newest to oldest)
const allPosts = allPostsUnsorted.sort(
  (a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate)
);
---

<BaseLayout>
  <section>
    <Wrapper variant="heroNarrow">
      <Text
        tag="h1"
        variant="textXL"
        class="text-base-900 mt-4 lg:text-balance text-center 2xl:text-3xl"
      >
        {frontmatter.title}
      </Text>
      <div
        class="flex gap-4 flex-col md:flex-row mt-4 items-center justify-between"
      >
        <div class="flex items-center gap-x-3">
          <img
            class="object-cover size-10 rounded-full"
            src={frontmatter.avatar.url}
            alt={frontmatter.avatar.url}
          />
          <div class="flex flex-col text-base-500">
            <time datetime={frontmatter.pubDate.toString().slice(0, 10)}>
              <Text tag="span" variant="textXS" class="font-medium"
                >Written on {frontmatter.pubDate.toString().slice(0, 10)}
              </Text>
            </time>
            <Text tag="span" variant="textXS" class="font-medium">
              by {frontmatter.author}
            </Text>
          </div>
        </div>
        <div class="flex flex-wrap items-center gap-1">
          {
            frontmatter.tags.map((tag) => (
              <>
                <Link
                  title={tag}
                  size="sm"
                  variant="muted"
                  aria-label={tag}
                  href={`/blog/tags/${tag}`}
                  class="text-accent-500  font-medium text-xs hover:text-base-900     "
                >
                  {tag}
                </Link>
              </>
            ))
          }
        </div>
      </div>
      <img
        class="object-cover aspect-[16/9] rounded-2xl mt-8"
        src={frontmatter.image.url}
        alt={frontmatter.image.url}
      />
      <div class="text-center">
        <Text tag="p" variant="textMD" class="mt-4 text-base-500 text-balance">
          {frontmatter.description}
        </Text>
      </div>
    </Wrapper>
  </section>
  <section>
    <Wrapper variant="narrow">
      <div class="prose-styles"><slot /></div>
    </Wrapper>
  </section>
  <SubscribeCta />
  <section>
    <Wrapper variant="wide" class="py-12">
      <div
        class="grid grid-cols-1 gap-4 md:grid-cols-2 xl:grid-cols-3 mt-8 group"
      >
        {
          allPosts
            .slice(0, 3)
            .map((post) => (
              <Insights
                url={"/blog/posts/" + post.slug}
                alt={post.data.title}
                title={post.data.title}
                image={post.data.image.url}
                description={post.data.description}
                pubDate={post.data.pubDate.toString().slice(0, 10)}
              />
            ))
        }
      </div>
    </Wrapper>
  </section>
</BaseLayout>
